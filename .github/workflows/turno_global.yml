name: ‚öôÔ∏è Turno Global do GitNations

# 1. Gatilhos: Quando este fluxo de trabalho ser√° executado
on:
  # Rodar o turno automaticamente todos os dias √† meia-noite UTC (Ajuste o hor√°rio conforme a necessidade)
  schedule:
    - cron: '0 0 * * *'
  
  # Permite rodar o fluxo de trabalho manualmente atrav√©s da aba "Actions" do GitHub
  workflow_dispatch:

# 2. Permiss√µes
# √â crucial dar permiss√£o de escrita ao GITHUB_TOKEN para que o script possa COMMITAR
# as atualiza√ß√µes dos arquivos JSON das na√ß√µes de volta ao reposit√≥rio.
permissions:
  contents: write # Permiss√£o para commitar e criar arquivos

# 3. Defini√ß√£o do Job
jobs:
  run_simulation_turn:
    name: Rodar o Motor de Simula√ß√£o
    runs-on: ubuntu-latest # O sistema operacional que rodar√° o script

    steps:
      # Passo 1: Fazer o checkout do c√≥digo do reposit√≥rio
      - name: Checkout do Reposit√≥rio
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      # Passo 2: Configurar o ambiente Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Use uma vers√£o LTS est√°vel
          
      # Passo 3: Instalar as depend√™ncias do projeto
      # AGORA USAMOS NPM INSTALL de fato, lendo o package.json
      - name: Instalar Depend√™ncias
        run: npm install

      # Passo 4: Rodar o script principal de simula√ß√£o
      # AGORA USAMOS O SCRIPT DEFINIDO NO package.json
      - name: Executar o Turno Global (Node.js)
        run: npm run start-turn
          
      # Passo 5: Configurar o usu√°rio Git (para o commit)
      - name: Configurar Credenciais do Git
        run: |
          git config user.name "GitNations Bot (A√ß√£o Automatizada)"
          git config user.email "gitnations-bot@users.noreply.github.com"

      # Passo 6: Verificar e Commitar as Mudan√ßas (as atualiza√ß√µes dos JSONs)
      # Nota: Usando 'env' para definir a sa√≠da de forma moderna no GitHub Actions
      - name: Commitar Atualiza√ß√µes de Estat√≠sticas
        id: commit
        run: |
          # Adiciona todos os arquivos JSON que foram alterados pelo game.js
          git add --all nations/*.json
          
          # Verifica se h√° algo para commitar
          if git diff --staged --quiet; then
            echo "pode_commitar=false" >> $GITHUB_OUTPUT
            echo "Nenhuma mudan√ßa nas na√ß√µes para commitar."
          else
            echo "pode_commitar=true" >> $GITHUB_OUTPUT
            git commit -m "ü§ñ Turno Global: Estat√≠sticas Atualizadas [skip ci]"
            echo "Altera√ß√µes committadas com sucesso."
          fi
          
      # Passo 7: Enviar as altera√ß√µes para o reposit√≥rio
      - name: Fazer Push das Mudan√ßas
        # S√≥ faz o push se o passo 6 tiver detectado altera√ß√µes
        if: steps.commit.outputs.pode_commitar == 'true'
        run: git push
        uses: actions/setup-node@v4
        with:
          node-version: '20' 
          
      # Passo 3: Instalar as depend√™ncias do projeto (se houver, como 'node-fetch' para o JS)
      # Se voc√™ usar 'fetch' nativo do Node 18+, pode pular esta etapa ou usar 'npm install'.
      - name: Instalar Depend√™ncias (Simulado)
        run: echo "Nenhuma depend√™ncia instalada no momento."
        # run: npm install

      # Passo 4: Rodar o script principal de simula√ß√£o
      - name: Executar o Turno Global (Node.js)
        # Chamamos o script game.js e a fun√ß√£o runGlobalTurn
        # Usamos 'node' para executar o JS diretamente.
        # Voc√™ deve garantir que 'js/game.js' tenha um m√©todo que possa ser chamado/exportado
        # para iniciar o runGlobalTurn, ou apenas executar o arquivo.
        run: |
          # Simula√ß√£o: Criar um wrapper para executar a fun√ß√£o que precisa rodar
          # Aqui, usaremos o Node para executar um pequeno script que importa e roda a fun√ß√£o:
          echo "Rodando simula√ß√£o..."
          node -e '
            const { runGlobalTurn } = require("./js/game.js");
            runGlobalTurn().catch(err => {
              console.error("Erro no Turno Global:", err);
              process.exit(1);
            });
          '
          
      # Passo 5: Configurar o usu√°rio Git (para o commit)
      - name: Configurar Credenciais do Git
        run: |
          git config user.name "GitNations Bot (A√ß√£o Automatizada)"
          git config user.email "gitnations-bot@users.noreply.github.com"

      # Passo 6: Verificar e Commitar as Mudan√ßas (as atualiza√ß√µes dos JSONs)
      - name: Commitar Atualiza√ß√µes de Estat√≠sticas
        id: commit
        run: |
          # Adiciona todos os arquivos JSON que foram alterados pelo game.js
          git add --all nations/*.json
          
          # Verifica se h√° algo para commitar
          if git diff --staged --quiet; then
            echo "::set-output name=pode_commitar::false"
            echo "Nenhuma mudan√ßa nas na√ß√µes para commitar."
          else
            echo "::set-output name=pode_commitar::true"
            git commit -m "ü§ñ Turno Global: Estat√≠sticas Atualizadas [skip ci]"
            echo "Altera√ß√µes committadas com sucesso."
          fi
          
      # Passo 7: Enviar as altera√ß√µes para o reposit√≥rio
      - name: Fazer Push das Mudan√ßas
        # S√≥ faz o push se o passo 6 tiver detectado altera√ß√µes
        if: steps.commit.outputs.pode_commitar == 'true'
        run: git push
